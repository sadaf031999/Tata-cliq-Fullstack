{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_app\\\\cliq project\\\\tata cliq frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// ResetPassword.jsx\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(`/api/reset-password/${token}`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      })\n    });\n    const data = await res.json();\n    if (data.success) {\n      setMessage(data.message);\n      setTimeout(() => navigate('/sign-in'), 2000);\n    } else {\n      setMessage(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"kZKA4Et+vXlFsBII1VOJm0jjy7s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","message","setMessage","token","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/react_app/cliq project/tata cliq frontend/src/pages/ResetPassword.js"],"sourcesContent":["// ResetPassword.jsx\r\nimport React, { useState } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const { token } = useParams()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const res = await fetch(`/api/reset-password/${token}`, {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ password })\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    if (data.success) {\r\n      setMessage(data.message)\r\n      setTimeout(() => navigate('/sign-in'), 2000)\r\n    } else {\r\n      setMessage(data.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"password\" placeholder=\"Enter new password\"\r\n          value={password} onChange={e => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEW;EAAM,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC7B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuBN,KAAK,EAAE,EAAE;MACtDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf;MAAS,CAAC;IACnC,CAAC,CAAC;IAEF,MAAMgB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAE7B,IAAID,IAAI,CAACE,OAAO,EAAE;MAChBf,UAAU,CAACa,IAAI,CAACd,OAAO,CAAC;MACxBiB,UAAU,CAAC,MAAMd,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC;IAC9C,CAAC,MAAM;MACLF,UAAU,CAACa,IAAI,CAACd,OAAO,CAAC;IAC1B;EACF,CAAC;EAED,oBACEL,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA;MAAM4B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BvB,OAAA;QAAO6B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,oBAAoB;QACrDC,KAAK,EAAE5B,QAAS;QAAC6B,QAAQ,EAAEtB,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1E3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACNtB,OAAO,iBAAIL,OAAA;MAAAuB,QAAA,EAAIlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAAzB,EAAA,CApCKD,aAAa;EAAA,QAGCJ,SAAS,EACVC,WAAW;AAAA;AAAAqC,EAAA,GAJxBlC,aAAa;AAsCnB,eAAeA,aAAa;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}